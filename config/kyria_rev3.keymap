/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


 // Keyboard Key Layout
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |   1    |   2    |   3    |   4    |   5    |   6    |                     %                     |   7    |   8    |   9    |   10   |   11   |   12   |
 // |   13   |   14   |   15   |   16   |   17   |   18   |                     %                     |   19   |   20   |   21   |   22   |   23   |   24   |
 // |   25   |   26   |   27   |   28   |   29   |   30   |   31   |   32   |   %   |   33   |   34   |   35   |   36   |   37   |   38   |   39   |   40   |
 //                            |   41   |   42   |   43   |   44   |   45   |   %   |   46   |   47   |   48   |   49   |   50   |
  

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define SYM 1
#define NUM 2
#define NAV 3
#define MOUSE 4
#define MEDIA 5
#define FUN 6

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */
 
 / {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <32 45>;
            bindings = <&mo BASE>;
        };
        combo_nav {
            timeout-ms = <50>;
            key-positions = <31 44>;
            bindings = <&mo NAV>;
        };
        combo_num {
            timeout-ms = <50>;
            key-positions = <30 43>;
            layers = <BASE>;
            bindings = <&mo NUM>;
        };
        combo_sym {
            timeout-ms = <50>;
            key-positions = <33 46>;
            layers = <BASE>;
            bindings = <&mo SYM>;
        };
    };
};

/ {
    behaviors {
        td_lshift: tap_dance_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_CAPS";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp LSHIFT>, <&caps_word>;
        };

        ahct: alt_hold_caps_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "ALT_HOLD_CAPS_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };
 };
 
/ {
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC        | Q      | W      | E        | R       | T    |                     %                    | Y          | U       | I        | O      | P      | MOUSE |
            // |  CAPSW/ALT  | A/LGUI | S/LALT | D/LSHIFT | F/LCTRL | G    |                     %                    | H          | J/RCTRL | K/RSHIFT | L/LALT | ;/RGUI | '     |
            // |  GUI        | Z      | X      | C        | V       | B    | NONE   | NONE   |   %   | NONE  | NONE   | N          | M       | ,        | .      | /      | MEDIA |
            //                                 | DEL      | TAB     | BSPC | LSHIFT | LCTRL  |   %   | RCTRL | RSHIFT | SPACE/RALT | RET     | FUN      |
            bindings = <
            &kp ESC 	    &kp Q      &kp W      &kp E          &kp R       &kp T                                                    &kp Y          &kp U       &kp I        &kp O      &kp P         &tog MOUSE
            &ahct LALT CAPS &mt LGUI A &mt LALT S &mt LSHIFT D   &mt LCTRL F &kp G                                                    &kp H          &mt RCTRL J &mt RSHIFT K &mt LALT L &mt RGUI SEMI &kp SQT
            &kp LGUI 	    &kp Z      &kp X      &kp C          &kp V       &kp B    &none       &none          &none     &none      &kp N          &kp M       &kp COMMA    &kp DOT    &kp FSLH      &tog MEDIA
					                              &kp DEL        &kp TAB     &kp BSPC &td_lshift  &kp LCTRL      &kp RCTRL &kp RSHIFT &mt RALT SPACE &kp RET     &mo FUN
            >;
        };

        sym_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  `  |  ~  |  {  |  }  |  "  |  !   |                   %                | NONE | NONE  | NONE   | NONE  | NONE | NONE |
            // |  $  |  #  |  (  |  )  |  _  |  |   |                   %                | NONE | RCTRL | RSHIFT | LALT  | GUI  | NONE |
            // |  <  |  >  |  [  |  ]  |  \  |  &   |  NONE  | NONE |   %   | NONE | SYM | NONE | NONE  | NONE   | NONE  | NONE | NONE |
            //                   | DEL | RET | BSPC | LSHIFT | CTRL |   %   | NONE | SYM | NONE | NONE  | NONE   |
            bindings = <
            &kp GRAVE &kp TILDE2 &kp LBRC &kp RBRC &kp AT       &kp EXCL                                           &none &none     &none      &none    &none    &none
            &kp DLLR  &kp NUHS   &kp LPAR &kp RPAR &kp UNDER    &kp PIPE2                                          &none &kp RCTRL &kp RSHIFT &kp LALT &kp RGUI &none
            &kp LT    &kp GT     &kp LBKT &kp RBKT &kp KP_SLASH &kp AMPS     &none      &none          &none &none &none &none     &none      &none    &none    &none
                                          &kp DEL  &kp TAB      &kp BSPC     &td_lshift &kp LCTRL      &none &none &none &none     &none
            >;
        };

        num_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // | NONE | NONE | NONE | NONE   | NONE  | NONE |                %                     | +     | 7   | 8   | 9 | * | ^    |
            // | NONE | LGUI | LALT | LSHIFT | LCTRL | NONE |                %                     | =     | 4   | 5   | 6 | 0 | NONE |
            // | NONE | NONE | NONE | NONE   | NONE  | NONE | NUM | NONE |   %   | NONE  | NONE    | -     | 1   | 2   | 3 | / | %    |
            //                      | NONE   | NONE  | NONE | NUM | NONE |   %   | RCTRL | RSHIFT  | SPACE | RET | FUN |
            bindings = <
            &none &none    &none    &none      &none     &none                                 &kp KP_PLUS   &kp N7  &kp N8 &kp N9 &kp KP_ASTERISK &kp CARET
            &none &kp LGUI &kp LALT &kp LSHIFT &kp LCTRL &none                                 &kp EQUAL     &kp N4  &kp N5 &kp N6 &kp N0          &none
            &none &none    &none    &none   &none  &none &none &none      &none     &none      &kp KP_MINUS  &kp N1  &kp N2 &kp N3 &kp KP_SLASH    &kp PRCNT
                                    &none   &none  &none &none &none      &kp RCTRL &kp RSHIFT &kp SPACE &kp RET &mo FUN
            >;
        };
        
        nav_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // | NONE | NONE | NONE | NONE   | NONE  | NONE |                %                    | NONE  | NONE | NONE | NONE  | NONE | NONE |
            // | NONE | GUI  | LALT | LSHIFT | LCTRL | NONE |                %                    | LEFT  | DOWN | UP   | RIGHT | NONE | NONE |
            // | NONE | NONE | NONE | NONE   | NONE  | NONE | NONE | NAV |   %   | NONE  | SYM    | NONE  | NONE | NONE | NONE  | NONE | NONE |
            //                      | NONE   | NONE  | NONE | NONE | NAV |   %   | RCTRL | RSHIFT | SPACE | RET  | FUN  |
            bindings = <
            &none &none    &none    &none     &none      &none                                        &none    &none    &none   &none     &none &none
            &none &kp LGUI &kp LALT &kp LCTRL &kp LSHIFT &none                                        &kp LEFT &kp DOWN &kp UP  &kp RIGHT &none &none
            &none &none    &none    &none     &none      &none &none &none      &none      &none      &none    &none    &none   &none     &none &none
                                    &none     &none      &none &none &none      &kp RCTRL  &kp RSHIFT &mt RALT SPACE    &kp RET &mo FUN
            >;
        };
    };
};
